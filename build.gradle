// For those who want the bleeding edge
buildscript {
    ext.kotlin_version = "1.3.70"

    def f = file("gradle/mcversion.txt")

    project.ext.mcVersion = f.exists() ? f.readLines().first() as int : 10809

    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }

    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:" + (
                mcVersion >= 11200 ? '2.3-SNAPSHOT' :
                        mcVersion >= 10904 ? '2.2-SNAPSHOT' :
                                mcVersion >= 10809 ? "2.1-SNAPSHOT" :
                                        "invalid"
        )
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
    }

}
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'kotlin'
apply plugin: 'net.minecraftforge.gradle.forge'


repositories {
    mavenCentral()
    jcenter()
    maven {
        name = "kryonet"
        url = "http://clojars.org/repo/"
    }
    maven {
        url 'https://repository.apache.org/content/repositories/releases/org/apache/xmlgraphics/'
    }
    maven { url 'https://jitpack.io' }

}

apply from: 'sk1erllc_github_packages.gradle'

version = "0.1.19"
group = "club.sk1er" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Sk1er Mod Core"

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = [
            11202: '1.12.2-14.23.0.2486',
            11201: '1.12.1-14.22.0.2444',
            11200: '1.12-14.21.1.2387',
            11102: '1.11.2-13.20.0.2216',
            11100: '1.11-13.19.1.2188',
            11002: '1.10.2-12.18.2.2099',
            10904: '1.9.4-12.17.0.1976',
            10809: '1.8.9-11.15.1.2318-1.8.9'
    ][mcVersion]
    mappings = [
            11202: "snapshot_20170615",
            11201: "snapshot_20170615",
            11200: "snapshot_20170615",
            11102: "snapshot_20161220",
            11100: "snapshot_20161111",
            11002: "snapshot_20160518",
            10904: "snapshot_20160518",
            10809: "stable_22"
    ][mcVersion]


    runDir = "run"
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    embed "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"


}


task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

moveResources.dependsOn processResources
classes.dependsOn moveResources

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    exclude "META-INF/**"

}

jar {
    dependsOn configurations.compile
    from {
        configurations.embed.collect {
            exclude 'club.sk1er.vigilance.example.ExampleMod'
            it.isDirectory() ? it : zipTree(it)
        }
    }

    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    manifest {
        attributes "FMLCorePlugin": "club.sk1er.mods.core.dev.FMLLoadingPlugin",
                "ModSide": "CLIENT",
                "FMLCorePluginContainsFMLMod": "Yes, yes it does"
    }
    exclude "META-INF/**"
}

apply from: 'preprocessor.gradle'

ext {
    customMCVersion = -1
}

task changeMcVersion() {
    doLast {
        def version

        if (customMCVersion != -1) {
            println "Running forced 1.8.9"
            version = customMCVersion
        } else if (project.hasProperty("minecraftVersion")) {
            version = project.minecraftVersion
        } else {
            version = 10809
            println "Defaulting to version 1.8.9..."
        }

        project.ext.mcVersion = version
        def f = file("gradle/mcversion.txt")
        f.delete()
        f.createNewFile()
        f.write(version.toString())

        println "MC target version is $version"
        def vars = [MC: version as int]
        project.convertTree(vars, 'src/main/java')
        project.convertTree(vars, 'src/main/kotlin')
        project.convertTree(vars, 'src/main/resources')
    }
}


task changeToDefaultVersion {
    doLast {
        customMCVersion = 10809
    }
}

deobfCompileDummyTask.finalizedBy(changeMcVersion)

build.finalizedBy(changeToDefaultVersion)
changeToDefaultVersion.finalizedBy(changeMcVersion)
compileKotlin {
    kotlinOptions {
        languageVersion = "1.3"
    }
}